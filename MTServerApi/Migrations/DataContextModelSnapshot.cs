// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mtvendors_api.Models;

#nullable disable

namespace mtvendors_api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("mtvendors_api.Models.Cliente", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext")
                        .HasColumnName("bairro");

                    b.Property<string>("BairroCobranca")
                        .HasColumnType("longtext")
                        .HasColumnName("bairro_cobranca");

                    b.Property<string>("BairroEntrega")
                        .HasColumnType("longtext")
                        .HasColumnName("bairro_entrega");

                    b.Property<string>("BairroFaturamento")
                        .HasColumnType("longtext")
                        .HasColumnName("bairro_faturamento");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext")
                        .HasColumnName("categoria");

                    b.Property<int?>("Cep")
                        .HasColumnType("int")
                        .HasColumnName("cep");

                    b.Property<int?>("CepCobranca")
                        .HasColumnType("int")
                        .HasColumnName("ceo_cobranca");

                    b.Property<int?>("CepEntrega")
                        .HasColumnType("int")
                        .HasColumnName("cep_entrega");

                    b.Property<int?>("CepFaturamento")
                        .HasColumnType("int")
                        .HasColumnName("cep_faturamento");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext")
                        .HasColumnName("cidade");

                    b.Property<string>("CnpjCpf")
                        .HasColumnType("longtext")
                        .HasColumnName("cnpj_cpf");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext")
                        .HasColumnName("complemento");

                    b.Property<string>("ComplementoCobranca")
                        .HasColumnType("longtext")
                        .HasColumnName("complemento_cobranca");

                    b.Property<string>("ComplementoEntrega")
                        .HasColumnType("longtext")
                        .HasColumnName("complemento_entrega");

                    b.Property<string>("ComplementoFaturamento")
                        .HasColumnType("longtext")
                        .HasColumnName("complemento_faturamento");

                    b.Property<string>("Contribuinte")
                        .HasColumnType("longtext")
                        .HasColumnName("Contribuinte");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext")
                        .HasColumnName("endereco");

                    b.Property<string>("EnderecoCobranca")
                        .HasColumnType("longtext")
                        .HasColumnName("endereco_cobranca");

                    b.Property<string>("EnderecoEntrega")
                        .HasColumnType("longtext")
                        .HasColumnName("endereco_entrega");

                    b.Property<string>("EnderecoFaturamento")
                        .HasColumnType("longtext")
                        .HasColumnName("endereco_faturamento");

                    b.Property<string>("Fone_1")
                        .HasColumnType("longtext")
                        .HasColumnName("fone_1");

                    b.Property<string>("Fone_2")
                        .HasColumnType("longtext")
                        .HasColumnName("fone_2");

                    b.Property<string>("Fone_3")
                        .HasColumnType("longtext")
                        .HasColumnName("fone_3");

                    b.Property<string>("InscrEstadual")
                        .HasColumnType("longtext")
                        .HasColumnName("inscr_estadual");

                    b.Property<string>("InscrMunicipal")
                        .HasColumnType("longtext")
                        .HasColumnName("inscr_municipal");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("longtext")
                        .HasColumnName("nome_fantasia");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("numero");

                    b.Property<int?>("NumeroCobranca")
                        .HasColumnType("int")
                        .HasColumnName("numero_cobranca");

                    b.Property<int?>("NumeroEntrega")
                        .HasColumnType("int")
                        .HasColumnName("numero_entrega");

                    b.Property<int?>("NumeroFaturamento")
                        .HasColumnType("int")
                        .HasColumnName("numero_faturamento");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("longtext")
                        .HasColumnName("razao_social");

                    b.Property<string>("Referencia")
                        .HasColumnType("longtext")
                        .HasColumnName("referencia");

                    b.Property<string>("RotaEntrega")
                        .HasColumnType("longtext")
                        .HasColumnName("rota_entrega");

                    b.Property<int?>("SeqRotaEntrega")
                        .HasColumnType("int")
                        .HasColumnName("seq_rota_entrega");

                    b.Property<string>("Suframa")
                        .HasColumnType("longtext")
                        .HasColumnName("suframa");

                    b.Property<string>("UF")
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.HasKey("Codigo");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("mtvendors_api.Models.CondPgto", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("abreviatura");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_parcelas");

                    b.HasKey("Codigo");

                    b.ToTable("condpgto");
                });

            modelBuilder.Entity("mtvendors_api.Models.Empresa", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.HasKey("Codigo");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("mtvendors_api.Models.FamiliaProduto", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int?>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.HasKey("Codigo");

                    b.ToTable("familiaproduto");
                });

            modelBuilder.Entity("mtvendors_api.Models.Filial", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("UF")
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.HasKey("Codigo");

                    b.ToTable("filial");
                });

            modelBuilder.Entity("mtvendors_api.Models.Imagem", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("hash");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time(6)")
                        .HasColumnName("hora");

                    b.Property<bool>("IsAtualizado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_atualizado");

                    b.HasKey("Nome");

                    b.ToTable("imagem");
                });

            modelBuilder.Entity("mtvendors_api.Models.JustificativaPedido", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("justificativa");
                });

            modelBuilder.Entity("mtvendors_api.Models.Meta", b =>
                {
                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<string>("FkVendedor")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_vendedor");

                    b.Property<string>("FkClienteCnpjCpf")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<string>("FkProduto")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_produto");

                    b.Property<string>("FkFamilia")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_familia");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("periodo");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double")
                        .HasColumnName("quantidade");

                    b.Property<double>("Valor")
                        .HasColumnType("double")
                        .HasColumnName("valor");

                    b.HasKey("FkFilial", "FkVendedor", "FkClienteCnpjCpf", "FkProduto", "FkFamilia");

                    b.ToTable("meta");
                });

            modelBuilder.Entity("mtvendors_api.Models.Produto", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<double>("AliquotaIpi")
                        .HasColumnType("double")
                        .HasColumnName("aliquota_ipi");

                    b.Property<string>("Bloqueado")
                        .HasColumnType("longtext")
                        .HasColumnName("bloqueado");

                    b.Property<double>("CMV")
                        .HasColumnType("double")
                        .HasColumnName("cmv");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<string>("DescricaoProduto")
                        .HasColumnType("longtext")
                        .HasColumnName("descricao_produto");

                    b.Property<int?>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("FkFamilia")
                        .HasColumnType("longtext")
                        .HasColumnName("fk_familia");

                    b.Property<int?>("FkGrade1")
                        .HasColumnType("int")
                        .HasColumnName("fk_grade1");

                    b.Property<int?>("FkGrade2")
                        .HasColumnType("int")
                        .HasColumnName("fk_grade2");

                    b.Property<int?>("FkGrade3")
                        .HasColumnType("int")
                        .HasColumnName("fk_grade3");

                    b.Property<string>("FkNaturezaOperacao")
                        .HasColumnType("longtext")
                        .HasColumnName("fk_natureza_operacao");

                    b.Property<string>("FkUnidadeMedida")
                        .HasColumnType("longtext")
                        .HasColumnName("fk_unidade_medida");

                    b.Property<double>("PesoBruto")
                        .HasColumnType("double")
                        .HasColumnName("peso_bruto");

                    b.Property<double>("QtdEmbalagem")
                        .HasColumnType("double")
                        .HasColumnName("qtd_embalagem");

                    b.Property<double>("QtdMultVendas")
                        .HasColumnType("double")
                        .HasColumnName("qtd_mult_vendas");

                    b.HasKey("Codigo");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("mtvendors_api.Models.Propriedade", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int>("Sequencia")
                        .HasColumnType("int")
                        .HasColumnName("sequencia");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("valor");

                    b.HasKey("Nome");

                    b.ToTable("propriedades");
                });

            modelBuilder.Entity("mtvendors_api.Models.RelClienteTabelaPreco", b =>
                {
                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<string>("FkClienteCpfCnpj")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_cliente_cpf_cnpj");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("FkTabelaPreco")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_tabela_preco");

                    b.HasKey("FkFilial", "FkClienteCpfCnpj", "FkEmpresa", "FkTabelaPreco");

                    b.ToTable("relclientetabelapreco");
                });

            modelBuilder.Entity("mtvendors_api.Models.RelCondPgtoTabelaPreco", b =>
                {
                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<string>("FkCondicaoPagamento")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_condicao_pgto");

                    b.Property<string>("FkTabelaPreco")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_tabela_preco");

                    b.Property<string>("FkVendedor")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_vendedor");

                    b.Property<string>("FkClienteCnpj")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_cliente_cnpj");

                    b.Property<string>("Incondicional")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("incondicional");

                    b.Property<double>("PercDesconto")
                        .HasColumnType("double")
                        .HasColumnName("perc_desconto");

                    b.HasKey("FkEmpresa", "FkFilial", "FkCondicaoPagamento", "FkTabelaPreco", "FkVendedor", "FkClienteCnpj");

                    b.ToTable("relcondpgtotabpreco");
                });

            modelBuilder.Entity("mtvendors_api.Models.RelFilialCondPgto", b =>
                {
                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("cod_empresa");

                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("cod_filial");

                    b.Property<string>("FkCondicaoPagamento")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cod_condicao");

                    b.Property<double>("ValorMin")
                        .HasColumnType("double")
                        .HasColumnName("vlr_minimo");

                    b.HasKey("FkEmpresa", "FkFilial", "FkCondicaoPagamento");

                    b.ToTable("relfilialcondpgto");
                });

            modelBuilder.Entity("mtvendors_api.Models.RelVendedorTabelaPreco", b =>
                {
                    b.Property<string>("FkVendedor")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_vendedor");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("FkTabelaPreco")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fk_tabela_preco");

                    b.HasKey("FkVendedor", "FkEmpresa", "FkTabelaPreco");

                    b.ToTable("relvendedortabelapreco");
                });

            modelBuilder.Entity("mtvendors_api.Models.SituacaoPedido", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("situacaopedido");
                });

            modelBuilder.Entity("mtvendors_api.Models.TabelaPreco", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<string>("EspecialCliente")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("especial_cliente");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("Promocional")
                        .HasColumnType("longtext")
                        .HasColumnName("promocional");

                    b.HasKey("Codigo");

                    b.ToTable("tabelapreco");
                });

            modelBuilder.Entity("mtvendors_api.Models.Vendedor", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("AtualizaSaldoFlex")
                        .HasColumnType("longtext")
                        .HasColumnName("atualiza_saldoflex");

                    b.Property<string>("CodigoSupervisor")
                        .HasColumnType("longtext")
                        .HasColumnName("codigo_supervisor");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext")
                        .HasColumnName("senha");

                    b.Property<string>("SenhaCaixaPostal")
                        .HasColumnType("longtext")
                        .HasColumnName("senha_caixa_postal");

                    b.Property<int?>("SysRestoreTablet")
                        .HasColumnType("int")
                        .HasColumnName("sys_restore_tablet");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext")
                        .HasColumnName("tipo");

                    b.HasKey("Codigo");

                    b.ToTable("vendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
