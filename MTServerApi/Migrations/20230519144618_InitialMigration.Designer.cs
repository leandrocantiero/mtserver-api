// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mtvendors_api.DAL;

#nullable disable

namespace mtvendors_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230519144618_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("mtvendors_api.Models.DAO.AgendaVisita", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<DateOnly>("DataNotificacao")
                        .HasColumnType("date")
                        .HasColumnName("data_notificacao");

                    b.Property<DateOnly>("DataVisita")
                        .HasColumnType("date")
                        .HasColumnName("data_visita");

                    b.Property<int>("Excluido")
                        .HasColumnType("int")
                        .HasColumnName("excluido");

                    b.Property<int>("FkClienteCnpjCpf")
                        .HasColumnType("int")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<TimeOnly>("Horario")
                        .HasColumnType("time(6)")
                        .HasColumnName("horario");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("observacoes");

                    b.Property<string>("PeriodoVisita")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("periodo_visita");

                    b.Property<int>("Sequencia")
                        .HasColumnType("int")
                        .HasColumnName("sequencia");

                    b.Property<int>("fkVendedor")
                        .HasColumnType("int")
                        .HasColumnName("fk_vendedor");

                    b.HasKey("Codigo");

                    b.ToTable("agendavisita");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.AutorizacaoPedido", b =>
                {
                    b.Property<string>("NrPedidoPalm")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nr_pedido_palm");

                    b.Property<int>("CodVendedor")
                        .HasColumnType("int")
                        .HasColumnName("fk_vendedor");

                    b.Property<DateOnly>("DataRequisicao")
                        .HasColumnType("date")
                        .HasColumnName("data_requisicao");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("observacao");

                    b.Property<int>("Situacao")
                        .HasColumnType("int")
                        .HasColumnName("situacao");

                    b.HasKey("NrPedidoPalm");

                    b.ToTable("autorizacaopedido");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Cidade", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.HasKey("Codigo");

                    b.ToTable("cidade");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Cliente", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext")
                        .HasColumnName("bairro");

                    b.Property<string>("BairroCobranca")
                        .HasColumnType("longtext")
                        .HasColumnName("bairro_cobranca");

                    b.Property<string>("BairroEntrega")
                        .HasColumnType("longtext")
                        .HasColumnName("bairro_entrega");

                    b.Property<string>("BairroFaturamento")
                        .HasColumnType("longtext")
                        .HasColumnName("bairro_faturamento");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext")
                        .HasColumnName("categoria");

                    b.Property<int?>("Cep")
                        .HasColumnType("int")
                        .HasColumnName("cep");

                    b.Property<int?>("CepCobranca")
                        .HasColumnType("int")
                        .HasColumnName("ceo_cobranca");

                    b.Property<int?>("CepEntrega")
                        .HasColumnType("int")
                        .HasColumnName("cep_entrega");

                    b.Property<int?>("CepFaturamento")
                        .HasColumnType("int")
                        .HasColumnName("cep_faturamento");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext")
                        .HasColumnName("cidade");

                    b.Property<string>("CnpjCpf")
                        .HasColumnType("longtext")
                        .HasColumnName("cnpj_cpf");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext")
                        .HasColumnName("complemento");

                    b.Property<string>("ComplementoCobranca")
                        .HasColumnType("longtext")
                        .HasColumnName("complemento_cobranca");

                    b.Property<string>("ComplementoEntrega")
                        .HasColumnType("longtext")
                        .HasColumnName("complemento_entrega");

                    b.Property<string>("ComplementoFaturamento")
                        .HasColumnType("longtext")
                        .HasColumnName("complemento_faturamento");

                    b.Property<string>("Contribuinte")
                        .HasColumnType("longtext")
                        .HasColumnName("Contribuinte");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext")
                        .HasColumnName("endereco");

                    b.Property<string>("EnderecoCobranca")
                        .HasColumnType("longtext")
                        .HasColumnName("endereco_cobranca");

                    b.Property<string>("EnderecoEntrega")
                        .HasColumnType("longtext")
                        .HasColumnName("endereco_entrega");

                    b.Property<string>("EnderecoFaturamento")
                        .HasColumnType("longtext")
                        .HasColumnName("endereco_faturamento");

                    b.Property<string>("Fone_1")
                        .HasColumnType("longtext")
                        .HasColumnName("fone_1");

                    b.Property<string>("Fone_2")
                        .HasColumnType("longtext")
                        .HasColumnName("fone_2");

                    b.Property<string>("Fone_3")
                        .HasColumnType("longtext")
                        .HasColumnName("fone_3");

                    b.Property<string>("InscrEstadual")
                        .HasColumnType("longtext")
                        .HasColumnName("inscr_estadual");

                    b.Property<string>("InscrMunicipal")
                        .HasColumnType("longtext")
                        .HasColumnName("inscr_municipal");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("longtext")
                        .HasColumnName("nome_fantasia");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("numero");

                    b.Property<int?>("NumeroCobranca")
                        .HasColumnType("int")
                        .HasColumnName("numero_cobranca");

                    b.Property<int?>("NumeroEntrega")
                        .HasColumnType("int")
                        .HasColumnName("numero_entrega");

                    b.Property<int?>("NumeroFaturamento")
                        .HasColumnType("int")
                        .HasColumnName("numero_faturamento");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("longtext")
                        .HasColumnName("razao_social");

                    b.Property<string>("Referencia")
                        .HasColumnType("longtext")
                        .HasColumnName("referencia");

                    b.Property<string>("RotaEntrega")
                        .HasColumnType("longtext")
                        .HasColumnName("rota_entrega");

                    b.Property<int?>("SeqRotaEntrega")
                        .HasColumnType("int")
                        .HasColumnName("seq_rota_entrega");

                    b.Property<string>("Suframa")
                        .HasColumnType("longtext")
                        .HasColumnName("suframa");

                    b.Property<string>("UF")
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.HasKey("Codigo");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Cobranca", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<int>("FkClienteCnpjCpf")
                        .HasColumnType("int")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<int>("FkTipoTitulo")
                        .HasColumnType("int")
                        .HasColumnName("fk_tipo_titulo");

                    b.Property<int>("FkTitulo")
                        .HasColumnType("int")
                        .HasColumnName("fk_titulo");

                    b.Property<double>("PgtoCheque")
                        .HasColumnType("double")
                        .HasColumnName("pgto_cheque");

                    b.Property<double>("PgtoDinheiro")
                        .HasColumnType("double")
                        .HasColumnName("pgto_dinheiro");

                    b.Property<double>("PgtoOutrasEspecies")
                        .HasColumnType("double")
                        .HasColumnName("pgto_outras_especies");

                    b.Property<double>("PgtoTicket")
                        .HasColumnType("double")
                        .HasColumnName("pgto_ticket");

                    b.Property<double>("ValorCorrigido")
                        .HasColumnType("double")
                        .HasColumnName("valor_corrigido");

                    b.HasKey("Codigo");

                    b.ToTable("cobranca");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.CondPgto", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("abreviatura");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_parcelas");

                    b.HasKey("Codigo");

                    b.ToTable("condpgto");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.ContatoCliente", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cargo");

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ddd");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("departamento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FkClienteCnpjCpf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<int>("Ramal")
                        .HasColumnType("int")
                        .HasColumnName("ramal");

                    b.Property<int>("Sequencia")
                        .HasColumnType("int")
                        .HasColumnName("sequencia");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefone");

                    b.HasKey("Codigo");

                    b.ToTable("contatocliente");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Empresa", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.HasKey("Codigo");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.EnderecoCobranca", b =>
                {
                    b.Property<int>("Cep")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cep");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("bairro");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("complemento");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("endereco");

                    b.Property<string>("FkClienteCnpjCpf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<string>("FkCodigoCidade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_codigo_cidade");

                    b.Property<int>("Sequencia")
                        .HasColumnType("int")
                        .HasColumnName("sequencia");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.Property<string>("cnpj_cobranca")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cnpj_cobranca");

                    b.HasKey("Cep");

                    b.ToTable("enderecocobranca");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.EnderecoEntrega", b =>
                {
                    b.Property<int>("Cep")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cep");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("bairro");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("complemento");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("endereco");

                    b.Property<string>("FkClienteCnpjCpf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<string>("FkCodigoCidade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_codigo_cidade");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("inscricao_estadual");

                    b.Property<int>("Sequencia")
                        .HasColumnType("int")
                        .HasColumnName("sequencia");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cnpj");

                    b.HasKey("Cep");

                    b.ToTable("enderecoentrega");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.EstoqueDisponivel", b =>
                {
                    b.Property<string>("CodigoLocalArmazenamento")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo_local_armazenamento");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double")
                        .HasColumnName("quantidade");

                    b.Property<int>("fkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<string>("fkItemGrade1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_item_grade1");

                    b.Property<string>("fkItemGrade2")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_item_grade2");

                    b.Property<string>("fkItemGrade3")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_item_grade3");

                    b.Property<string>("fkProduto")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_produto");

                    b.HasKey("CodigoLocalArmazenamento");

                    b.ToTable("estoquedisponivel");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Evento", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_hora");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int>("FkTipoEvento")
                        .HasColumnType("int")
                        .HasColumnName("fk_tipo_evento");

                    b.Property<string>("FkVendedor")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_vendedor");

                    b.Property<int>("Visualizado")
                        .HasColumnType("int")
                        .HasColumnName("visualizado");

                    b.HasKey("Codigo");

                    b.ToTable("evento");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.FamiliaProduto", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int?>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.HasKey("Codigo");

                    b.ToTable("familiaproduto");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.FaturamentoPedido", b =>
                {
                    b.Property<string>("NrPedidoPalm")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nr_pedido_palm");

                    b.Property<DateOnly>("DataFaturamento")
                        .HasColumnType("date")
                        .HasColumnName("data_faturamento");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<string>("FkItemGrade1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_item_grade1");

                    b.Property<string>("FkItemGrade2")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_item_grade2");

                    b.Property<string>("FkItemGrade3")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_item_grade3");

                    b.Property<string>("FkVendedor")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_vendedor");

                    b.Property<string>("Fk_Produto")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_produto");

                    b.Property<string>("NrPedidoRetaguarda")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nr_pedido_retaguarda");

                    b.Property<int>("NumeroNf")
                        .HasColumnType("int")
                        .HasColumnName("numero_nf");

                    b.Property<double>("QuantidadeFaturada")
                        .HasColumnType("double")
                        .HasColumnName("quantidade_faturada");

                    b.Property<int>("SeqItemNf")
                        .HasColumnType("int")
                        .HasColumnName("seq_item_nf");

                    b.Property<string>("SerieNf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("serie_nf");

                    b.HasKey("NrPedidoPalm");

                    b.ToTable("faturamentopedido");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Filial", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("UF")
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.HasKey("Codigo");

                    b.ToTable("filial");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.FormaPagamento", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int>("Abreviatura")
                        .HasColumnType("int")
                        .HasColumnName("abreviatura");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.HasKey("Codigo");

                    b.ToTable("formapgto");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.HistoricoCliente", b =>
                {
                    b.Property<string>("NrPedidoPalm")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nr_pedido_palm");

                    b.Property<string>("CodCategoria1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cod_categoria1");

                    b.Property<string>("CodCategoria2")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cod_categoria2");

                    b.Property<string>("CodCategoria3")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cod_categoria3");

                    b.Property<int>("FkClienteCnpjCpf")
                        .HasColumnType("int")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<int>("FkCondPgto")
                        .HasColumnType("int")
                        .HasColumnName("fk_cond_pgto");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<int>("FkFormaPgto")
                        .HasColumnType("int")
                        .HasColumnName("fk_forma_pgto");

                    b.Property<int>("FkOperComercial")
                        .HasColumnType("int")
                        .HasColumnName("fk_oper_comercial");

                    b.Property<int>("FkTipoCobranca")
                        .HasColumnType("int")
                        .HasColumnName("fk_tipo_cobranca");

                    b.Property<int>("FkTransportadora")
                        .HasColumnType("int")
                        .HasColumnName("fk_transportadora");

                    b.Property<int>("FkVendedor")
                        .HasColumnType("int")
                        .HasColumnName("fk_vendedor");

                    b.Property<double>("LimiteCredito")
                        .HasColumnType("double")
                        .HasColumnName("limite_credito");

                    b.Property<string>("SituacaoCliente")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("situacao_cliente");

                    b.HasKey("NrPedidoPalm");

                    b.ToTable("historicocliente");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Imagem", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("hash");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time(6)")
                        .HasColumnName("hora");

                    b.Property<bool>("IsAtualizado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_atualizado");

                    b.HasKey("Nome");

                    b.ToTable("imagem");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.JustificativaPedido", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("justificativa");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Meta", b =>
                {
                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<string>("FkVendedor")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("fk_vendedor");

                    b.Property<string>("FkClienteCnpjCpf")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<string>("FkProduto")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fk_produto");

                    b.Property<string>("FkFamilia")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fk_familia");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("periodo");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double")
                        .HasColumnName("quantidade");

                    b.Property<double>("Valor")
                        .HasColumnType("double")
                        .HasColumnName("valor");

                    b.HasKey("FkFilial", "FkVendedor", "FkClienteCnpjCpf", "FkProduto", "FkFamilia");

                    b.ToTable("meta");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Pedido", b =>
                {
                    b.Property<string>("NrPedidoPalm")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nr_pedido_palm");

                    b.Property<string>("CodCategoria1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cod_categoria1");

                    b.Property<string>("CodCategoria2")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cod_categoria2");

                    b.Property<string>("CodCategoria3")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cod_categoria3");

                    b.Property<DateOnly>("DataEmissao")
                        .HasColumnType("date")
                        .HasColumnName("data_emissao");

                    b.Property<DateOnly>("DataEntrega")
                        .HasColumnType("date")
                        .HasColumnName("data_entrega");

                    b.Property<double>("Desconto1")
                        .HasColumnType("double")
                        .HasColumnName("desconto1");

                    b.Property<double>("Desconto2")
                        .HasColumnType("double")
                        .HasColumnName("desconto2");

                    b.Property<double>("Desconto3")
                        .HasColumnType("double")
                        .HasColumnName("desconto3");

                    b.Property<double>("Desconto4")
                        .HasColumnType("double")
                        .HasColumnName("desconto4");

                    b.Property<int>("FkClienteCnpjCpf")
                        .HasColumnType("int")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<int>("FkCondPgto")
                        .HasColumnType("int")
                        .HasColumnName("fk_cond_pgto");

                    b.Property<int>("FkContato")
                        .HasColumnType("int")
                        .HasColumnName("fk_contato");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<int>("FkEndCobranca")
                        .HasColumnType("int")
                        .HasColumnName("fk_end_cobranca");

                    b.Property<int>("FkEndEntrega")
                        .HasColumnType("int")
                        .HasColumnName("fk_end_entrega");

                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<int>("FkFormaPgto")
                        .HasColumnType("int")
                        .HasColumnName("fk_forma_pgto");

                    b.Property<int>("FkNatOper")
                        .HasColumnType("int")
                        .HasColumnName("fk_nat_oper");

                    b.Property<int>("FkOperComercial")
                        .HasColumnType("int")
                        .HasColumnName("fk_oper_comercial");

                    b.Property<int>("FkTipoCobranca")
                        .HasColumnType("int")
                        .HasColumnName("fk_tipo_cobranca");

                    b.Property<int>("FkTipoFrete")
                        .HasColumnType("int")
                        .HasColumnName("fk_tipo_frete");

                    b.Property<int>("FkTransportadora")
                        .HasColumnType("int")
                        .HasColumnName("fk_transportadora");

                    b.Property<int>("FkVendedor")
                        .HasColumnType("int")
                        .HasColumnName("fk_vendedor");

                    b.Property<TimeOnly>("HoraEmissao")
                        .HasColumnType("time(6)")
                        .HasColumnName("hora_emissao");

                    b.Property<string>("NrPedidoCliente")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nr_pedido_cliente");

                    b.Property<string>("NrPedidoRetaguarda")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nr_pedido_retaguarda");

                    b.Property<string>("ObsPedido")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("obs_pedido");

                    b.Property<double>("PesoBruto")
                        .HasColumnType("double")
                        .HasColumnName("peso_bruto");

                    b.Property<int>("SituacaoPedido")
                        .HasColumnType("int")
                        .HasColumnName("situacao_pedido");

                    b.Property<double>("ValorBruto")
                        .HasColumnType("double")
                        .HasColumnName("valor_bruto");

                    b.Property<double>("ValorFrete")
                        .HasColumnType("double")
                        .HasColumnName("valor_frete");

                    b.Property<double>("ValorFreteTonelada")
                        .HasColumnType("double")
                        .HasColumnName("valor_frete_tonelada");

                    b.HasKey("NrPedidoPalm");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Produto", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<double>("AliquotaIpi")
                        .HasColumnType("double")
                        .HasColumnName("aliquota_ipi");

                    b.Property<string>("Bloqueado")
                        .HasColumnType("longtext")
                        .HasColumnName("bloqueado");

                    b.Property<double>("CMV")
                        .HasColumnType("double")
                        .HasColumnName("cmv");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<string>("DescricaoProduto")
                        .HasColumnType("longtext")
                        .HasColumnName("descricao_produto");

                    b.Property<int?>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("FkFamilia")
                        .HasColumnType("longtext")
                        .HasColumnName("fk_familia");

                    b.Property<int?>("FkGrade1")
                        .HasColumnType("int")
                        .HasColumnName("fk_grade1");

                    b.Property<int?>("FkGrade2")
                        .HasColumnType("int")
                        .HasColumnName("fk_grade2");

                    b.Property<int?>("FkGrade3")
                        .HasColumnType("int")
                        .HasColumnName("fk_grade3");

                    b.Property<string>("FkNaturezaOperacao")
                        .HasColumnType("longtext")
                        .HasColumnName("fk_natureza_operacao");

                    b.Property<string>("FkUnidadeMedida")
                        .HasColumnType("longtext")
                        .HasColumnName("fk_unidade_medida");

                    b.Property<double>("PesoBruto")
                        .HasColumnType("double")
                        .HasColumnName("peso_bruto");

                    b.Property<double>("QtdEmbalagem")
                        .HasColumnType("double")
                        .HasColumnName("qtd_embalagem");

                    b.Property<double>("QtdMultVendas")
                        .HasColumnType("double")
                        .HasColumnName("qtd_mult_vendas");

                    b.HasKey("Codigo");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Propriedade", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int>("Sequencia")
                        .HasColumnType("int")
                        .HasColumnName("sequencia");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("valor");

                    b.HasKey("Nome");

                    b.ToTable("propriedades");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.RelClienteTabelaPreco", b =>
                {
                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<string>("FkClienteCpfCnpj")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("fk_cliente_cpf_cnpj");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("FkTabelaPreco")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fk_tabela_preco");

                    b.HasKey("FkFilial", "FkClienteCpfCnpj", "FkEmpresa", "FkTabelaPreco");

                    b.ToTable("relclientetabelapreco");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.RelCondPgtoTabelaPreco", b =>
                {
                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<string>("FkCondicaoPagamento")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fk_condicao_pgto");

                    b.Property<string>("FkTabelaPreco")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fk_tabela_preco");

                    b.Property<string>("FkVendedor")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("fk_vendedor");

                    b.Property<string>("FkClienteCnpj")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("fk_cliente_cnpj");

                    b.Property<string>("Incondicional")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("incondicional");

                    b.Property<double>("PercDesconto")
                        .HasColumnType("double")
                        .HasColumnName("perc_desconto");

                    b.HasKey("FkEmpresa", "FkFilial", "FkCondicaoPagamento", "FkTabelaPreco", "FkVendedor", "FkClienteCnpj");

                    b.ToTable("relcondpgtotabpreco");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.RelFilialCondPgto", b =>
                {
                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("cod_empresa");

                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("cod_filial");

                    b.Property<string>("FkCondicaoPagamento")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cod_condicao");

                    b.Property<double>("ValorMin")
                        .HasColumnType("double")
                        .HasColumnName("vlr_minimo");

                    b.HasKey("FkEmpresa", "FkFilial", "FkCondicaoPagamento");

                    b.ToTable("relfilialcondpgto");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.RelVendedorTabelaPreco", b =>
                {
                    b.Property<string>("FkVendedor")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("fk_vendedor");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("FkTabelaPreco")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("fk_tabela_preco");

                    b.HasKey("FkVendedor", "FkEmpresa", "FkTabelaPreco");

                    b.ToTable("relvendedortabelapreco");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.SituacaoPedido", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.HasKey("Codigo");

                    b.ToTable("situacaopedido");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.SysConfig", b =>
                {
                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.Property<string>("Schema")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("schema");

                    b.HasKey("Version");

                    b.ToTable("sys_config");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.TabelaPreco", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<string>("EspecialCliente")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("especial_cliente");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<string>("Promocional")
                        .HasColumnType("longtext")
                        .HasColumnName("promocional");

                    b.HasKey("Codigo");

                    b.ToTable("tabelapreco");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.TipoCobranca", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.HasKey("Codigo");

                    b.ToTable("tipocobranca");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Titulo", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<DateOnly>("DataVencimento")
                        .HasColumnType("date")
                        .HasColumnName("data_vencimento");

                    b.Property<string>("FkClienteCnpjCpf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fk_cliente_cnpj_cpf");

                    b.Property<int>("FkEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("fk_empresa");

                    b.Property<int>("FkFilial")
                        .HasColumnType("int")
                        .HasColumnName("fk_filial");

                    b.Property<double>("PercentualJurosDia")
                        .HasColumnType("double")
                        .HasColumnName("percentual_juros_dia");

                    b.Property<string>("TipoTitulo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo_titulo");

                    b.Property<double>("ValorJurosDia")
                        .HasColumnType("double")
                        .HasColumnName("valor_juros_dia");

                    b.Property<double>("ValorMulta")
                        .HasColumnType("double")
                        .HasColumnName("valor_multa");

                    b.Property<double>("ValorOriginal")
                        .HasColumnType("double")
                        .HasColumnName("valor_original");

                    b.HasKey("Codigo");

                    b.ToTable("titulo");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Transportadora", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cidade");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cnpj");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.HasKey("Codigo");

                    b.ToTable("transportadora");
                });

            modelBuilder.Entity("mtvendors_api.Models.DAO.Vendedor", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("AtualizaSaldoFlex")
                        .HasColumnType("longtext")
                        .HasColumnName("atualiza_saldoflex");

                    b.Property<string>("CodigoSupervisor")
                        .HasColumnType("longtext")
                        .HasColumnName("codigo_supervisor");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext")
                        .HasColumnName("senha");

                    b.Property<string>("SenhaCaixaPostal")
                        .HasColumnType("longtext")
                        .HasColumnName("senha_caixa_postal");

                    b.Property<int?>("SysRestoreTablet")
                        .HasColumnType("int")
                        .HasColumnName("sys_restore_tablet");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext")
                        .HasColumnName("tipo");

                    b.HasKey("Codigo");

                    b.ToTable("vendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
